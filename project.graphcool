# project: cj7gdhdwb02te01141lbxk8vo
# version: 43

type File @model {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
  item: Item @relation(name: "ItemImage")
}

type User @model {
  createdAt: DateTime!
  email: String @isUnique
  id: ID! @isUnique
  invites: [Invite!]! @relation(name: "UserInvites")
  pursuer: [TradeRequest!]! @relation(name: "UserPursuing")
  name: String!
  password: String
  updatedAt: DateTime!
  items: [Item!]! @relation(name: "UserItems")
  pursued: [TradeRequest!]! @relation(name: "UserPursued")
  incomingRequests: [ItemRequest!]! @relation(name: "RequestsOnOwner")
  auth0UserId: String @isUnique
  outgoingRequests: [ItemRequest!]! @relation(name: "RequestsOnUser")
}

type Invite @model {
  createdAt: DateTime!
  id: ID! @isUnique
  inviter: [User!]! @relation(name: "UserInvites")
  invitee: String @isUnique
  status: TradeRequestStatus
  updatedAt: DateTime!
}

type TradeRequest @model {
  id: ID! @isUnique
  pursuer: User! @relation(name: "UserPursuing")
  pursued: User! @relation(name: "UserPursued")
  status: TradeRequestStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum TradeRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum ItemRequestStatus {
  PENDING
  DENIED
  DENIED_UNFULFILLED
  ACCEPTED
  TRANSFER
  TRANSFER_FULFILLED
  TRANSFER_FULFILLED_BY_OWNER
  CANCEL
}

enum ItemStatus {
  FREE
  SHARE
}

type Item @model {
  createdAt: DateTime!
  id: ID! @isUnique
  owner: User! @relation(name: "UserItems")
  tags: [Tag!]! @relation(name: "ItemTags")
  title: String!
  status: ItemStatus
  updatedAt: DateTime!
  image: File @relation(name: "ItemImage")
  requests: [ItemRequest!]! @relation(name: "RequestsOnItem")
}

type ItemRequest @model {
  id: ID! @isUnique
  owner: User! @relation(name: "RequestsOnOwner")
  requester: User! @relation(name: "RequestsOnUser")
  item: Item! @relation(name: "RequestsOnItem")
  status: ItemRequestStatus
  createdAt: DateTime!
  updatedAt: DateTime!
  transfer: ItemTransfer @relation(name: "TransferOnItemRequest")
}

enum TransferOption {
  PICKUP
  DELIVERY
  ARRANGED
}

type ItemTransfer @model {
  id: ID! @isUnique
  request: ItemRequest! @relation(name: "TransferOnItemRequest")
  date: DateTime!
  method: TransferOption
  requesterApproved: Boolean!
  ownerApproved: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Tag @model {
  id: ID! @isUnique
  key: String!
  items: [Item!]! @relation(name: "ItemTags")
  createdAt: DateTime!
  updatedAt: DateTime!
}