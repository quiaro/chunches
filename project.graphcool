# project: cj7gdhdwb02te01141lbxk8vo
# version: 12

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type User implements Node {
  createdAt: DateTime!
  email: String @isUnique
  id: ID! @isUnique
  invites: [Invite!]! @relation(name: "UserInvites")
  pursuer: [Contact!]! @relation(name: "UserPursuing")
  pursued: [Contact!]! @relation(name: "UserPursued")
  name: String!
  password: String
  updatedAt: DateTime!
}

type Invite implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  inviter: [User!]! @relation(name: "UserInvites")
  invitee: String @isUnique
  status: ContactRequestStatus
  updatedAt: DateTime!
}

type Contact implements Node {
  id: ID! @isUnique
  pursuer: User! @relation(name: "UserPursuing")
  pursued: User! @relation(name: "UserPursued")
  status: ContactRequestStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ContactRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}